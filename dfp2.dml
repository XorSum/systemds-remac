# input: a,b
# output: x


a = read("/home/han/CLionProjects/untitled/cmake-build-debug/a.csv",format="csv")


b = read("/home/han/CLionProjects/untitled/cmake-build-debug/b.csv",format="csv")

e = 1000  # 误差
rho = 0.1
sigma = 0.1

m = ncol(a)
n = nrow(a)

f  = function(matrix[double] a,matrix[double] b,matrix[double] x) return (double ret) {
    tmp = a%*%x-b
    ret = sum( t(tmp)%*%tmp)
}

pow = function(double x,double y) return (double z) {
   z = 1.0
   i = 1
   while(i<=y) {
      z = z * x
      i = i + 1
   }
}

#x = matrix("0 0 0",rows=3, cols=1)
x = matrix(1.1,rows=3,cols=1)

print("x="+toString(x))

h = diag(matrix(1, rows=m, cols=1))
i = 1
end = FALSE
while((i<100)&(!end)) {
    g = 2 * t(a) %*% (a %*% x - b)
    loss = sum(t(g)%*%g)
    print("i="+toString(i)+"  loss="+toString(loss))
    if (loss < e) {
    	end = TRUE
     }
  #  print("g=")
  #   print(toString(g))
  #  print("x=")
  #  print(toString(x))

    # 探测步长
    d = - h %*% g
    s = d
    x = x + s
    print("s="+toString(s))
    print("x="+toString(x))
    y = 2 * t(a) %*% a %*% s
    #h = h - (h %*% y %*% t(y) %*% t(h)) / ( t(y) %*% t(h) %*% y)  + (s%*%t(s))/(t(s)%*%y)
    h = h - (h %*% y %*% t(y) %*% h) / ( t(y) %*% h %*% y)  + (s%*%t(s))/(t(s)%*%y)
    i = i + 1
}

print("i="+toString(i))
#print("x=")
#print(toString(sum(x)))
#print("h=")
#print(toString(sum(h)))

#write(x,"hdfs://10.11.1.209:9000/data/avazu/app-tr-x1.bin",format="binary")
#write(h,"hdfs://10.11.1.209:9000/data/avazu/app-tr-h.bin",format="binary")